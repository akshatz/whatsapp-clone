{"version":3,"sources":["firebase.js","components/Chat.js","StateProvider.js","reducer.js","components/SideBar.js","components/SideBarclone.js","components/SideChat.js","components/login.js","Main_Body.js","App.js","serviceWorker.js","index.js"],"names":["firebaseapp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","Chat","props","Colors","blue","blue1","pink_red","voilet","voilet1","red","l_blue","d_red","orange1","orange","useState","color","setColor","Messages","setMessages","useEffect","obj","keys","Object","length","Math","random","randomProperty","id","collection","doc","orderBy","onSnapshot","snap","docs","map","message","data","addnewchat","className","onClick","roomname","prompt","roomurl","add","name","url","to","Avatar","src","alt","style","backgroundColor","substring","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionType","state","action","console","log","type","user","Sidebar","dispatch","rooms","setRooms","search","setsearch","sidechat","snapshot","item","display","photoURL","signOut","then","catch","err","alert","IconButton","DonutLarge","MoreVert","SearchOutlined","placeholder","onChange","e","target","room","toLowerCase","includes","key","SideChat","history","useHistory","roomId","useParams","roomName","setRoomName","setRoomurl","maxheight","setmaxheight","height","input","setInput","messages","setmessages","resultsnap","ArrowBack","Date","timestamp","toDate","toUTCString","AttachFile","maxHeight","push","removeRoom","displayName","InsertEmoticon","preventDefault","FieldValue","serverTimestamp","Mic","Login","Button","signInWithPopup","result","MainBody","path","exact","roomid","delete","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.99874639.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAg3MzNLytBLwuohCFEblwO5FxiZRT81Js\",\r\n    authDomain: \"whatsapp-clone-aae9e.firebaseapp.com\",\r\n    databaseURL: \"https://whatsapp-clone-aae9e.firebaseio.com\",\r\n    projectId: \"whatsapp-clone-aae9e\",\r\n    storageBucket: \"whatsapp-clone-aae9e.appspot.com\",\r\n    messagingSenderId: \"150231501913\",\r\n    appId: \"1:150231501913:web:5e406238688f62b84cf548\",\r\n    measurementId: \"G-7EK9DQ0T0W\"\r\n  };\r\n  const firebaseapp = firebase.initializeApp(firebaseConfig)\r\n  const db = firebaseapp.firestore()\r\n  const auth = firebaseapp.auth()\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export {auth, provider}\r\n  export default db\r\n\r\n\r\n\r\n//   import React,{useEffect, useState} from \"react\";\r\n// import \"./sidebar.css\";\r\n// import SidebarChat from \"./Chat\";\r\n// import { Avatar, IconButton } from \"@material-ui/core\";\r\n// import { DonutLarge, Chat, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\n// import db from \"../firebase\"\r\n\r\n// function Sidebar() {\r\n//   const [rooms, setRooms] = useState([])\r\n//   useEffect(() => {\r\n//     db.collection(\"Rooms\").onSnapshot(snapshot=>{\r\n//       setRooms(snapshot.docs.map(item=>(\r\n//         {\r\n//           id:item.id,\r\n//           data:item.data()\r\n//         }\r\n//       )))\r\n//     })\r\n   \r\n//   }, [])\r\n//   return (\r\n//     <div className=\"sidebar\">\r\n//       <div className=\"sidebar_header\">\r\n//         <Avatar className=\"size1\" />\r\n//         <div className=\"sidebar_header_right\">\r\n//           <IconButton>\r\n//             <DonutLarge className=\"size\" />\r\n//           </IconButton>\r\n//           <IconButton>\r\n//             <Chat className=\"size\" />\r\n//           </IconButton>\r\n//           <IconButton>\r\n//             <MoreVert className=\"size\" />\r\n//           </IconButton>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"sidebar_search\">\r\n//         <div className=\"sidebar_searchcointainer\">\r\n//           <SearchOutlined />\r\n//           <input placeholder=\"Search or start a new chat\" type=\"text\" />\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"sidebar_chats\">\r\n//         <SidebarChat addnewchat/>\r\n//         {rooms.map((room)=>(\r\n//           <SidebarChat key={room.id} id={room.id} name={room.data.name} />)\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Avatar, colors } from \"@material-ui/core\";\r\nimport db from \"../firebase\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Chat(props) {\r\n \r\n let Colors = {\r\n  blue:\"#0f3057\",\r\n  blue1:\"#00587a\",\r\n  pink_red:\"#ff414d\",\r\n  voilet:\"#2a3d66\",\r\n  voilet1:\"#9d65c9\",\r\n  red:\"#ec0101\",\r\n  l_blue:\"#318fb5\",\r\n  d_red:\"#7d0633\",\r\n  orange1:\"#f08a5d\",\r\n  orange:\"#ff5722\",\r\n  \r\n};\r\n\r\nvar randomProperty = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  return obj[keys[ keys.length * Math.random() << 0]];\r\n};\r\nconst [color, setColor] = useState(\"#800080\")\r\n  const createchat = () => {\r\n  \r\n    const roomname = prompt(\"Please enter name of chat name\");\r\n    const roomurl = prompt(\"Please enter image url\");\r\n    if (roomname) {\r\n      db.collection(\"Rooms\").add({\r\n        name:roomname,\r\n        url:roomurl,\r\n      })\r\n    }\r\n  }; \r\n  const [Messages, setMessages] = useState([])\r\n  useEffect(()=>{\r\nsetColor(randomProperty(Colors))\r\n  },[])\r\n  useEffect(()=>{\r\n      if(props.id){\r\n        db.collection(\"Rooms\").doc(props.id).collection(\"Messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(snap=>{\r\n          setMessages(snap.docs.map(message=>(message.data())))\r\n        })\r\n      }\r\n    },[props.id])\r\n  return !props.addnewchat ? (\r\n    <Link className=\"link\"  to={`/rooms/${props.id}`}>\r\n    <div className=\"sidebarchat\">\r\n      <Avatar src={props.url===\"\" ? \"something\" : props.url} alt={props.name} style={{backgroundColor:color}}/>\r\n   \r\n      <div className=\"sidebarchat_info\">\r\n        <h3>{props.name}</h3>\r\n  <span>{Messages[0]?.message.substring(0,20)}{Messages[0]?.message.length > 20 && \"...\"}</span>\r\n      </div>\r\n    </div>\r\n    </Link>\r\n  ) : (\r\n    <div className=\"sidebarchat_add\" onClick={createchat}>\r\n      <h2>Add new Chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n// Colors.names = {\r\n//   blue:\"#0f3057\",\r\n//   blue1:\"#00587a\",\r\n//   pink_red:\"#ff414d\",\r\n//   voilet:\"#2a3d66\",\r\n//   red:\"#ec0101\",\r\n//   l_blue:\"#318fb5\",\r\n//   d_red:\"#7d0633\",\r\n//   orange:\"#ff5722\",\r\n//   purple:\"#150485\",\r\n// };\r\n\r\n\r\n\r\n// Colors.names = {\r\n//   aqua: \"#00ffff\",\r\n \r\n//   black: \"#000000\",\r\n//   blue: \"#0000ff\",\r\n//   brown: \"#a52a2a\",\r\n\r\n//   darkblue: \"#00008b\",\r\n//   darkcyan: \"#008b8b\",\r\n//   darkgrey: \"#a9a9a9\",\r\n//   darkgreen: \"#006400\",\r\n//   darkkhaki: \"#bdb76b\",\r\n//   darkmagenta: \"#8b008b\",\r\n//   darkolivegreen: \"#556b2f\",\r\n//   darkorange: \"#ff8c00\",\r\n//   darkorchid: \"#9932cc\",\r\n//   darkred: \"#8b0000\",\r\n//   darksalmon: \"#e9967a\",\r\n//   darkviolet: \"#9400d3\",\r\n//   fuchsia: \"#ff00ff\",\r\n//   gold: \"#ffd700\",\r\n//   green: \"#008000\",\r\n//   indigo: \"#4b0082\",\r\n//   khaki: \"#f0e68c\",\r\n//   lightblue: \"#add8e6\",\r\n//   lightcyan: \"#e0ffff\",\r\n//   lightgreen: \"#90ee90\",\r\n//   lightgrey: \"#d3d3d3\",\r\n\r\n//   lime: \"#00ff00\",\r\n//   magenta: \"#ff00ff\",\r\n//   maroon: \"#800000\",\r\n//   navy: \"#000080\",\r\n//   olive: \"#808000\",\r\n//   orange: \"#ffa500\",\r\n//   pink: \"#ffc0cb\",\r\n//   purple: \"#800080\",\r\n//   violet: \"#800080\",\r\n//   red: \"#ff0000\",\r\n// };","import React,{createContext,useContext, useReducer} from \"react\"\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children})=>{\r\n\r\n    return (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)} >\r\n        {children}\r\n    </StateContext.Provider> \r\n)}\r\nexport const useStateValue = () => useContext(StateContext);\r\n\r\n","export const initialState = {\r\n  user: null,\r\n};\r\n\r\nexport const actionType = {\r\n  SET_USER: \"SET_USER\",\r\n};\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case actionType.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport SidebarChat from \"./Chat\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { DonutLarge, Chat, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport db, { auth } from \"../firebase\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { actionType } from \"../reducer\";\r\n\r\nfunction Sidebar() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [rooms, setRooms] = useState([]);\r\n  const [search, setsearch] = useState(\"\");\r\n  const [sidechat, setsidechat] = useState(\"\");\r\n  const [sidechat1, setsidechat1] = useState(\"\");\r\n  const signOut = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({\r\n          type: actionType.SET_USER,\r\n          user: null,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"Rooms\").onSnapshot((snapshot) => {\r\n      setRooms(\r\n        snapshot.docs.map((item) => ({\r\n          id: item.id,\r\n          data: item.data(),\r\n        }))\r\n      );\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"sidebar\" style={{ display: sidechat }}>\r\n      <div className=\"sidebar_header\">\r\n        <Avatar className=\"size1\" src={user?.photoURL} onClick={signOut} />\r\n        <div className=\"sidebar_header_right\">\r\n          <IconButton>\r\n            <DonutLarge className=\"size\" />\r\n          </IconButton>\r\n          <IconButton>\r\n            <Chat className=\"size\" />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert className=\"size\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_search\">\r\n        <div className=\"sidebar_searchcointainer\">\r\n          <SearchOutlined />\r\n          <input\r\n            placeholder=\"Search or start a new chat\"\r\n            type=\"text\"\r\n            value={search}\r\n            onChange={(e) => {\r\n              setsearch(e.target.value);\r\n              console.log(e.target.value);\r\n              console.log(\"search\", search);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_chats\">\r\n        <SidebarChat addnewchat />\r\n        {rooms.map((room) => {\r\n          if (\r\n            room.data.name.toLowerCase().includes(search.toLowerCase()) ||\r\n            search === \"\"\r\n          ) {\r\n            return (\r\n              <SidebarChat\r\n                key={room.id}\r\n                id={room.id}\r\n                url={room.data.url}\r\n                name={room.data.name}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport SidebarChat from \"./Chat\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { DonutLarge, Chat, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport db, { auth } from \"../firebase\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { actionType } from \"../reducer\";\r\n\r\nfunction Sidebar() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [rooms, setRooms] = useState([]);\r\n  const [search, setsearch] = useState(\"\");\r\n  const signOut = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({\r\n          type: actionType.SET_USER,\r\n          user: null,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"Rooms\").onSnapshot((snapshot) => {\r\n      setRooms(\r\n        snapshot.docs.map((item) => ({\r\n          id: item.id,\r\n          data: item.data(),\r\n        }))\r\n      );\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"sidebar1\">\r\n      <div className=\"sidebar_header\">\r\n        <Avatar className=\"size1\" src={user?.photoURL} onClick={signOut} />\r\n        <div className=\"sidebar_header_right\">\r\n          <IconButton>\r\n            <DonutLarge className=\"size\" />\r\n          </IconButton>\r\n          <IconButton>\r\n            <Chat className=\"size\" />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert className=\"size\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_search\">\r\n        <div className=\"sidebar_searchcointainer\">\r\n          <SearchOutlined />\r\n          <input\r\n            placeholder=\"Search or start a new chat\"\r\n            type=\"text\"\r\n            value={search}\r\n            onChange={(e) => {\r\n              setsearch(e.target.value);\r\n              console.log(e.target.value);\r\n              console.log(\"search\", search);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_chats\">\r\n        <SidebarChat addnewchat />\r\n        {rooms.map((room) => {\r\n          if (\r\n            room.data.name.toLowerCase().includes(search.toLowerCase()) ||\r\n            search === \"\"\r\n          ) {\r\n            return (\r\n              <SidebarChat\r\n                key={room.id}\r\n                id={room.id}\r\n                url={room.data.url}\r\n                name={room.data.name}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport {\r\n  AttachFile,\r\n  SearchOutlined,\r\n  MoreVert,\r\n  InsertEmoticon,\r\n  Mic,\r\n  ArrowBack,\r\n} from \"@material-ui/icons\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport \"./Sidechat.css\";\r\nimport db from \"../firebase\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction SideChat(props) {\r\n  const history = useHistory();\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [roomurl, setRoomurl] = useState(\"\");\r\n  const [maxheight, setmaxheight] = useState(\"0px\");\r\n\r\n  const [height, setheight] = useState(15);\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const sendmsg = (e) => {\r\n    e.preventDefault();\r\n    console.log(input);\r\n    db.collection(\"Rooms\").doc(roomId).collection(\"Messages\").add({\r\n      name: user.displayName,\r\n      message: input,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setmessages] = useState([]);\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      console.log(roomId);\r\n      db.collection(\"Rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => {\r\n          if (snapshot.data()) {\r\n            setRoomName(snapshot.data().name);\r\n            setRoomurl(snapshot.data().url);\r\n          }\r\n        });\r\n      db.collection(\"Rooms\")\r\n        .doc(roomId)\r\n        .collection(\"Messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((resultsnap) => {\r\n          setmessages(\r\n            resultsnap.docs.map((doc) => {\r\n              return doc.data();\r\n            })\r\n          );\r\n          console.log(messages);\r\n        });\r\n    }\r\n  }, [roomId]);\r\n  return (\r\n    <div className=\"sidechat\">\r\n      <div className=\"sidechat_header\">\r\n        <Link to=\"/rooms\">\r\n          <IconButton>\r\n            <ArrowBack className=\"size\" />\r\n          </IconButton>\r\n        </Link>\r\n        <Avatar className=\"size1\" src={roomurl} />\r\n        <div className=\"sidechat_header_info\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            Last seen at\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toUTCString()}\r\n          </p>\r\n        </div>\r\n        <div className=\"sidechat_header_right\">\r\n          <IconButton>\r\n            <SearchOutlined className=\"size\" />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile className=\"size\" />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={(e) => {\r\n              if (maxheight === \"0px\") {\r\n                setmaxheight(\"100px\");\r\n              } else {\r\n                setmaxheight(\"0px\");\r\n              }\r\n            }}\r\n          >\r\n            <MoreVert className=\"size\" />\r\n          </IconButton>\r\n          <div\r\n            className=\"remove\"\r\n            style={{ maxHeight: maxheight }}\r\n            onClick={() => {\r\n              console.log(history.push(\"/rooms\"));\r\n              props.removeRoom(roomId);\r\n            }}\r\n          >\r\n            <p>Remove Room</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidechat_body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat_message ${\r\n              message.name == user.displayName && \"chat_receiver\"\r\n            }`}\r\n          >\r\n            <span className=\"sidechat_name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"sidechat_time\">\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"sidechat_footer\">\r\n        <InsertEmoticon className=\"message\" />\r\n        <form>\r\n          <input\r\n            placeholder=\"Type your message\"\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n            }}\r\n            style={{ height: `${height}px` }}\r\n            value={input}\r\n          />\r\n          <button type=\"submit\" onClick={sendmsg}>\r\n            Send the message\r\n          </button>\r\n        </form>\r\n        <Mic className=\"message\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideChat;\r\n","import { Avatar, Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport \"./login.css\" \r\nimport {auth, provider} from \"../firebase\"\r\nimport { useStateValue } from '../StateProvider'\r\nimport { actionType } from '../reducer'\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n    const signin = ()=>{\r\n        auth.signInWithPopup(provider).then(result=>{\r\n            dispatch({\r\n                type: actionType.SET_USER,\r\n                user:result.user\r\n            })\r\n        }).catch(err=>{\r\n            alert(err.message)\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"login\">\r\n                <div className=\"login_container\">\r\n                    <img alt=\"logo\" src=\"https://i.pinimg.com/originals/79/dc/31/79dc31280371b8ffbe56ec656418e122.png\" />\r\n\r\n                \r\n                <div className=\"text\">\r\n                   <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button onClick={signin} className=\"btn\">\r\n                    Sign In with Google\r\n                </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from \"react\";\r\nimport \"./Main_Body.css\";\r\nimport Sidebar from \"./components/SideBar\";\r\nimport Sidebarclone from \"./components/SideBarclone\";\r\nimport db from \"./firebase\";\r\nimport SideChat from \"./components/SideChat\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./components/login\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction MainBody() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const removeRoom = (roomid) => {\r\n    // console.log(history)\r\n    db.collection(\"Rooms\")\r\n      .doc(roomid)\r\n      .delete()\r\n      .then(() => {\r\n        alert(\"Room Deleted\");\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div className=\"main_body\">\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route path=\"/rooms\" exact>\r\n                <Sidebarclone />\r\n              </Route>\r\n              <Route path=\"/rooms/:roomId\">\r\n                <Sidebar />\r\n                <SideChat removeRoom={removeRoom} />\r\n              </Route>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </div>\r\n      ) : (\r\n        <Login />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainBody;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainBody from \"./Main_Body\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainBody />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer,{ initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}